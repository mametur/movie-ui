# .github/workflows/deploy.yml
name: Deploy to S3

on:
  workflow_run:
    workflows: ["Terraform for Infrastructure"]  # Trigger after the Terraform workflow completes
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout code
    - name: Checkout code
      uses: actions/checkout@v4

    # Step 2: Set up Node.js (for React build)
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.10.0'  # Use the appropriate version for your React app

    # Step 3: Install dependencies and build the React app
    - name: Install dependencies
      run: npm install

    - name: Build React app
      run: npm run build
    
    # Step 4: Set up AWS credentials for deployment
    - name: Set up AWS credentials for deployment
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    # Step 5: Sync the build folder to S3
    - name: Deploy to S3
      run: |
        aws s3 sync ./build s3://movie-react-app-mame-azad --delete

    # # Step 6: (Optional) Invalidate CloudFront cache
    # - name: Invalidate CloudFront Cache
    #   run: |
    #     aws cloudfront create-invalidation --distribution-id YOUR_CLOUDFRONT_DIST_ID --paths "/*"
    #   env:
    #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     AWS_REGION: ${{ secrets.AWS_REGION }}
